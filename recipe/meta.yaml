{% set name = "fcl" %}
{% set version = "0.6.1" %}
{% set sha256 = "c8a68de8d35a4a5cd563411e7577c0dc2c626aba1eef288cb1ca88561f8d8019" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/flexible-collision-library/fcl/archive/{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: true  # [win]
  run_exports:
    - {{ pin_subpackage(name, max_pin='x.x') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make  # [unix]
  host:
    - boost-cpp
    - flann
    - libode
    - libccd
    - eigen
    - octomap
  run:
    - boost-cpp
    - flann
    - libccd
    - octomap

test:
  commands:
    - test -f $PREFIX/include/fcl/geometry/shape/cylinder.h  # [unix]
    - test -f $PREFIX/lib/pkgconfig/fcl.pc  # [unix]
    - test -f $PREFIX/lib/libfcl${SHLIB_EXT}  # [unix]

about:
  home: https://github.com/flexible-collision-library/fcl
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: The flexible collision library (FCL) is a library for performing proximity queries.
  description: |
    FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.

    - Collision detection: detecting whether the two models overlap, and
      optionally, all of the triangles that overlap.
    - Distance computation: computing the minimum distance between a pair of
      models, i.e., the distance between the closest pair of points.
    - Tolerance verification: determining whether two models are closer or
      farther than a tolerance distance.
    - Continuous collision detection: detecting whether the two moving
      models overlap during the movement, and optionally, the time of
      contact.
    - Contact information: for collision detection and continuous collision
      detection, the contact information (including contact normals and
      contact points) can be returned optionally.

extra:
  recipe-maintainers:
    - wolfv
